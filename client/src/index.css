@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom font definitions */
@font-face {
  font-family: 'Xanman';
  src: url('/fonts/Xanman.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'XanmanWide';
  src: url('/fonts/Xanmanwide.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

:root {
  --background: hsl(0, 0%, 4%);
  --foreground: hsl(0, 0%, 98%);
  --muted: hsl(0, 0%, 15%);
  --muted-foreground: hsl(0, 0%, 65%);
  --popover: hsl(0, 0%, 4%);
  --popover-foreground: hsl(0, 0%, 98%);
  --card: hsl(0, 0%, 4%);
  --card-foreground: hsl(0, 0%, 98%);
  --border: hsl(0, 0%, 20%);
  --input: hsl(0, 0%, 20%);
  --primary: hsl(207, 90%, 54%);
  --primary-foreground: hsl(211, 100%, 99%);
  --secondary: hsl(0, 0%, 15%);
  --secondary-foreground: hsl(0, 0%, 98%);
  --accent: hsl(0, 0%, 15%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 84%, 60%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(0, 0%, 83%);
  --radius: 0.5rem;
  
  /* Custom color variables */
  --rich-black: hsl(0, 0%, 4%);
  --electric-orange: hsl(15, 100%, 60%);
  --cyan-blue: hsl(195, 100%, 50%);
  --electric-red: hsl(347, 100%, 55%);
  --neon-green: hsl(145, 100%, 45%);
}

.dark {
  --background: hsl(0, 0%, 4%);
  --foreground: hsl(0, 0%, 98%);
  --muted: hsl(0, 0%, 15%);
  --muted-foreground: hsl(0, 0%, 65%);
  --popover: hsl(0, 0%, 4%);
  --popover-foreground: hsl(0, 0%, 98%);
  --card: hsl(0, 0%, 4%);
  --card-foreground: hsl(0, 0%, 98%);
  --border: hsl(0, 0%, 20%);
  --input: hsl(0, 0%, 20%);
  --primary: hsl(207, 90%, 54%);
  --primary-foreground: hsl(211, 100%, 99%);
  --secondary: hsl(0, 0%, 15%);
  --secondary-foreground: hsl(0, 0%, 98%);
  --accent: hsl(0, 0%, 15%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 84%, 60%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(0, 0%, 83%);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply antialiased bg-white text-gray-900 overflow-x-hidden;
    font-family: 'XanmanWide', 'Inter', 'Arial', sans-serif;
  }
}

@layer components {
  .font-xanman {
    font-family: 'Xanman', 'Inter', 'Arial', sans-serif;
  }
  
  .font-xanman-wide {
    font-family: 'XanmanWide', 'Inter', 'Arial', sans-serif;
  }
  
  .bouncing-circle {
    position: absolute;
    border-radius: 50%;
    z-index: 10;
    transition: none;
  }
  
  .nav-bubble {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(0, 0, 0, 0.2);
  }
  
  .nav-bubble:hover {
    transform: scale(1.1);
    background: rgba(0, 0, 0, 0.2);
    border-color: rgba(0, 0, 0, 0.4);
  }
  
  .nav-bubble:active {
    transform: scale(0.95);
  }
  
  .floating-animation {
    animation: float 600s ease-in-out infinite;
  }
  
  .page-transition {
    transition: opacity 0.5s ease-in-out;
  }
  
  .glassmorphism {
    background: rgba(0, 0, 0, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(0, 0, 0, 0.1);
  }
}

@keyframes float {
  0%, 100% { 
    transform: translateY(0px); 
    opacity: 1;
  }
  50% { 
    transform: translateY(-1px); 
    opacity: 0.98;
  }
}

/* Mobile optimizations */
@media (max-width: 768px) {
  .nav-bubble {
    width: 60px !important;
    height: 60px !important;
  }
  
  .nav-bubble .text-xs {
    font-size: 0.75rem !important;
  }
  
  .bouncing-circle {
    width: 150px !important;
    height: 150px !important;
    font-size: 80px !important;
  }
  
  .font-xanman {
    font-size: clamp(2rem, 8vw, 4rem) !important;
  }
}

/* Utility classes for custom colors */
.bg-electric-orange {
  background-color: var(--electric-orange);
}

.bg-cyan-blue {
  background-color: var(--cyan-blue);
}

.bg-electric-red {
  background-color: var(--electric-red);
}

.bg-neon-green {
  background-color: var(--neon-green);
}

.text-electric-orange {
  color: var(--electric-orange);
}

.text-cyan-blue {
  color: var(--cyan-blue);
}

.text-electric-red {
  color: var(--electric-red);
}

.text-neon-green {
  color: var(--neon-green);
}

/* Interactive paint swirling background */
.paint-swirl-bg {
  background: 
    radial-gradient(circle at var(--mouse-x, 50%) var(--mouse-y, 50%), 
      #2e4c8b 0%, 
      #4a6bb5 15%, 
      #6b8dd6 30%, 
      transparent 50%
    ),
    radial-gradient(circle at calc(var(--mouse-x, 50%) + 30%) calc(var(--mouse-y, 50%) - 20%), 
      #5d4a8a 0%, 
      #7a6ba0 20%, 
      #9d8cb6 40%, 
      transparent 60%
    ),
    radial-gradient(circle at calc(var(--mouse-x, 50%) - 25%) calc(var(--mouse-y, 50%) + 35%), 
      #8fa9e5 0%, 
      #b5c6f2 25%, 
      #c8b5d4 50%, 
      transparent 70%
    ),
    radial-gradient(circle at calc(var(--tilt-x, 50%) + 10%) calc(var(--tilt-y, 50%) + 10%), 
      #d4c2a8 0%, 
      #e8d5c4 30%, 
      #a8b5a0 60%, 
      transparent 80%
    ),
    linear-gradient(135deg, 
      #2e4c8b, #5d4a8a, #8fa9e5, #c8b5d4, #d4c2a8, #a8b5a0
    );
  background-size: 
    150% 150%, 
    200% 200%, 
    180% 180%, 
    120% 120%,
    300% 300%;
  animation: paint-base-flow 40s ease-in-out infinite;
  transition: background 0.3s ease-out;
}

/* Mobile paint washing effect - smooth paint mixing in tilted tray */
@media (max-width: 768px) {
  .paint-swirl-bg {
    background: 
      /* Multiple layered paint flows for smooth mixing */
      radial-gradient(
        ellipse calc(200px + var(--flow-radius, 50px)) calc(150px + var(--flow-radius, 50px)) 
        at calc(var(--flow-x, 50%) * 1vw) calc(var(--flow-y, 50%) * 1vh), 
        rgba(46, 76, 139, 0.8) 0%, 
        rgba(74, 107, 181, 0.6) 30%, 
        rgba(107, 141, 214, 0.4) 60%, 
        transparent 85%
      ),
      radial-gradient(
        ellipse calc(180px + var(--flow-radius, 50px)) calc(120px + var(--flow-radius, 50px)) 
        at calc((100 - var(--flow-x, 50%)) * 1vw) calc((100 - var(--flow-y, 50%)) * 1vh), 
        rgba(93, 74, 138, 0.7) 0%, 
        rgba(122, 107, 160, 0.5) 35%, 
        rgba(157, 140, 182, 0.3) 70%, 
        transparent 90%
      ),
      radial-gradient(
        ellipse calc(160px + var(--flow-radius, 40px)) calc(200px + var(--flow-radius, 60px)) 
        at calc((var(--flow-x, 50%) * 0.7 + 15) * 1vw) calc((var(--flow-y, 50%) * 1.3 + 20) * 1vh), 
        rgba(143, 169, 229, 0.6) 0%, 
        rgba(181, 198, 242, 0.4) 40%, 
        rgba(200, 181, 212, 0.2) 80%, 
        transparent 95%
      ),
      radial-gradient(
        ellipse calc(140px + var(--flow-radius, 30px)) calc(140px + var(--flow-radius, 30px)) 
        at calc((var(--flow-x, 50%) * 0.4 + 30) * 1vw) calc((var(--flow-y, 50%) * 0.6 + 40) * 1vh), 
        rgba(212, 194, 168, calc(0.3 + var(--tilt-intensity, 0) * 0.4)) 0%, 
        rgba(168, 181, 160, calc(0.2 + var(--tilt-intensity, 0) * 0.3)) 50%, 
        transparent 100%
      ),
      /* Smooth directional flow gradient */
      linear-gradient(
        calc(var(--flow-angle, 0deg) + 30deg), 
        rgba(46, 76, 139, 0.3) 0%,
        rgba(93, 74, 138, 0.25) 20%,
        rgba(143, 169, 229, 0.2) 40%,
        rgba(200, 181, 212, 0.15) 60%,
        rgba(212, 194, 168, 0.1) 80%,
        rgba(168, 181, 160, 0.05) 100%
      ),
      /* Base gradient for seamless color mixing */
      linear-gradient(
        calc(var(--flow-angle, 0deg) - 45deg), 
        #2e4c8b 0%, 
        #4a5d7a 15%,
        #5d4a8a 30%, 
        #7a6ba0 45%,
        #8fa9e5 60%, 
        #b5c6f2 75%,
        #c8b5d4 85%,
        #d4c2a8 95%,
        #a8b5a0 100%
      );
    
    /* Smooth transitions for paint-like behavior */
    transition: 
      background-position 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      background-size 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    
    /* Animate the background position for flowing effect */
    background-position:
      calc(var(--flow-x, 50%) * 1vw - 50px) calc(var(--flow-y, 50%) * 1vh - 50px),
      calc((100 - var(--flow-x, 50%)) * 1vw + 30px) calc((100 - var(--flow-y, 50%)) * 1vh + 30px),
      calc(var(--flow-x, 50%) * 0.7vw + 20px) calc(var(--flow-y, 50%) * 1.3vh + 40px),
      calc(var(--flow-x, 50%) * 0.4vw + 60px) calc(var(--flow-y, 50%) * 0.6vh + 80px),
      50% 50%,
      0% 0%;
  }
}

@keyframes paint-base-flow {
  0%, 100% {
    background-position: 
      0% 0%, 
      100% 100%, 
      50% 50%, 
      25% 75%,
      0% 50%;
    filter: saturate(1.1) brightness(0.95) blur(0px);
  }
  33% {
    background-position: 
      100% 50%, 
      0% 50%, 
      100% 0%, 
      75% 25%,
      100% 0%;
    filter: saturate(1.3) brightness(1.05) blur(0.5px);
  }
  66% {
    background-position: 
      50% 100%, 
      50% 0%, 
      0% 100%, 
      50% 50%,
      50% 100%;
    filter: saturate(0.9) brightness(0.85) blur(0px);
  }
}
